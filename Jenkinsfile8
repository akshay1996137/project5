pipeline {
    agent any

    stages {
        stage('compile') {
            steps {
                echo 'compiling..'
                sh 'mvn compile'
            }
        }
        stage('Test') {
            steps {
                echo 'Testing..'
                sh 'mvn test'
            }
        }
        stage('sonar scan') {
            steps {
                withSonarQubeEnv('SonarQube') {
                sh 'mvn sonar:sonar'
                }
            }
        }
        stage('deploy') {
            steps {
                withSonarQubeEnv('SonarQube') {
                sh 'mvn sonar:sonar'
                }
            }
        }
        stage('package') {
            steps {
                sh 'mvn package'
            }
        }
        stage('sonarqube quality gate') {
            timeout(time: 1, unit: 'HOURS') { 
                def qg = waitForQualityGate() 
                if (qg.status != 'OK') {
                    error "Pipeline aborted due to quality gate failure: ${qg.status}"
                }   
            }
        }
   
   }   
                
    
}
